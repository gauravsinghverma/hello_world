# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
defaults: &defaults
  docker:
      - image: circleci/node:13.8.0
commands:
  print_pipeline_id:
    description: "Print pipeline Id"
    steps:
      - run: echo {$CIRCLE_WORKFLOW_ID}
orbs:
  # Declare a dependency on the welcome-orb
  welcome: circleci/welcome-orb@0.4.1
# Orchestrate or schedule a set of jobs
jobs:
  #print_hello:
  #  docker:
  #    - image: circleci/node:13.8.0
  #  steps:
  #    - run:
  #        name: hello
  #        command: |
  #          echo "hello"
  #          echo $TestEnvVar
  #print_world:
  #  docker:
  #    - image: circleci/node:13.8.0
  #  steps:
  #    - run:
  #        name: world
  #        command: |
  #          echo "world"
  save_hello_world_output:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run:
          name: output to file
          command: echo "hello world" > ~/output.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - output.txt
  print_output_file:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - attach_workspace:
          at: ~/
      - run: 
          name: print from file
          command: cat ~/output.txt
  print_id:
    <<: *defaults
    steps:
      - print_pipeline_id
  
  fail_job:
    <<: *defaults
    steps:
      - run:
          name: fail this job
          command: return 1
      - run:
          name: print job fail
          command: echo "job failed"
          when: on_fail
workflows:
  # Name the workflow "welcome"
  welcome:
    # Run the welcome/run job in its own container
    jobs:
      - fail_job
      #- print_id
      #- welcome/run
      #- save_hello_world_output
      #- print_output_file:
      #    requires:
      #      - save_hello_world_output
      #- print_hello
      #- print_world:
      #    requires:
      #      - print_hello
